<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="CourseDAO">
  	<select id="getCourseList" parameterType="course" resultType="course">
<!--   		SELECT *  -->
<!--   		  FROM course -->
<!--   		 ORDER BY course_id ASC -->
		SELECT nvl(star_point,0) as star_point, c.course_id, c.course_name, c.description, c.price, c.bootcamp_id, c.bootcamp_name, c.userId, c.course_period, c.position_id, c.fname, c.fname_en, c.fsize, t.teacher_id, t.teacher_name
  		  FROM teacher t, course c, 
  		  		(
  		  			SELECT course_id, avg(star_point) as star_point 
  		  		      FROM review
         	         GROUP BY course_id
         	     ) star
         WHERE c.teacher_id = t.teacher_id(+)
           AND c.course_id = star.course_id(+)
  		 ORDER BY course_id ASC
  	</select>
  	
  	<select id="getCourse" parameterType="course" resultType="course">
  		SELECT * 
  		  FROM course
  		 WHERE course_id = #{course_id}
  	</select>
  	
  	<insert id="insertCourse" parameterType="course">
  		INSERT INTO COURSE (COURSE_ID, COURSE_NAME, DESCRIPTION, PRICE, BOOTCAMP_ID, BOOTCAMP_NAME, USERID, COURSE_PERIOD, POSITION_ID
  			<if test="fname != null">
  				,FNAME, FNAME_EN, FSIZE
  			</if>
  			) 
  		VALUES (seq_course_course_id.NEXTVAL, #{course_name}, #{description}, #{price}, #{bootcamp_id}, #{bootcamp_name}, #{userId}, #{course_period}, #{position_id}
  			<if test="fname != null">
		 	, #{fname}, #{fname_en}, #{fsize}
		 	</if>
		 	)
  	</insert>
  	
  	<select id="goCourseForUpdating" parameterType="course" resultType="course">
  		SELECT * 
  		  FROM course
  		 WHERE course_id = #{course_id} 
  	</select>
  	
  	<update id="updateCourse" parameterType="course">
  		UPDATE COURSE 
  		SET
	      COURSE_NAME = #{course_name},
	      DESCRIPTION = #{description},
	      PRICE = #{price},
	      BOOTCAMP_ID = #{bootcamp_id},
	      BOOTCAMP_NAME = #{bootcamp_name},
	      USERID = #{userId},
	      COURSE_PERIOD = #{course_period},
	      POSITION_ID = #{position_id}
      <if test="fname != null">
         , FNAME = #{fname},
         FNAME_EN = #{fname_en},
         FSIZE = #{fsize}
      </if>
	   WHERE COURSE_ID = #{course_id}
  	</update>
  	
  	<delete id="deleteCourse" parameterType="course">
  		DELETE FROM course 
  		 WHERE course_id = #{course_id} 
  	</delete>
  	
  	<select id="searchRegionList" parameterType="course" resultType="course">
  		SELECT c.course_id, c.course_name, c.description, c.price, b.bootcamp_id, b.bootcamp_name, b.bootcamp_add, c.userId, c.course_period, c.position_id, c.fname, c.fname_en, c.fsize, c.teacher_id
  		  FROM course c, bootcamp b
  		 WHERE c.bootcamp_id = b.bootcamp_id AND bootcamp_add LIKE '%${bootcamp_name}%'
  		 ORDER BY course_id ASC
  	</select>
  	
  	<select id="searchPositionList" parameterType="course" resultType="course">
  		SELECT c.course_id, c.course_name, c.description, c.price, c.bootcamp_id, c.bootcamp_name, c.userId, c.course_period, p.position_id, p.position, c.fname, c.fname_en, c.fsize
 		  FROM course c, position p
         WHERE c.position_id = p.position_id AND p.position LIKE '%' || #{position} || '%'	
  		 ORDER BY course_id ASC
  	</select>
  	
  </mapper>
  


