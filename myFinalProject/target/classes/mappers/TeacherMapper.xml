<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="TeacherDAO">
  	<select id="getTeacherList" parameterType="teacher" resultType="teacher">
  		SELECT nvl(star_point,0) as star_point, t.teacher_id, t.bootcamp_id, t.teacher_name, t.bootcamp_name, c.course_id, c.course_name, t.short_description, t.description, t.fname, t.fname_en, t.fsize, t.position_id
  		  FROM teacher t, course c, 
  		  		(
  		  			SELECT teacher_id, avg(star_point) as star_point 
  		  		      FROM review
         	         GROUP BY teacher_id
         	     ) star
         WHERE t.course_id = c.course_id(+)
           AND t.teacher_id = star.teacher_id(+) <!-- outer join 해줘야함 -->
  		 ORDER BY teacher_id ASC
  	</select>
  	
  	<select id="getTeacher" parameterType="teacher" resultType="teacher">
<!-- 		SELECT t.teacher_id, t.bootcamp_id, t. teacher_name, t.bootcamp_name, c.course_id, c.course_name, t.short_description, t.description, t.fname, t.fname_en, t.fsize, p.position_id, p.position -->
<!--   		  FROM teacher t, position p, course c -->
<!--   		 WHERE t.teacher_id = #{teacher_id} AND t.position_id = p.position_id AND t.course_id = c.course_id -->
		SELECT nvl(star_point,0) as star_point, t.teacher_id, t.bootcamp_id, t. teacher_name, t.bootcamp_name, c.course_id, c.course_name, t.short_description, t.description, t.fname, t.fname_en, t.fsize, p.position_id, p.position
  		  FROM teacher t, position p, course c, 
            (
            	SELECT teacher_id, avg(star_point) as star_point 
                  FROM review
                 GROUP BY teacher_id
            ) star
  		 WHERE t.teacher_id = #{teacher_id}
           AND t.position_id = p.position_id 
           AND t.course_id = c.course_id(+)
           AND t.teacher_id = star.teacher_id(+)
         ORDER BY teacher_id ASC											
  	</select>
  	
  	<insert id="insertTeacher" parameterType="com.human.java.domain.TeacherVO">
  		 INSERT INTO TEACHER (TEACHER_ID, BOOTCAMP_ID, TEACHER_NAME, BOOTCAMP_NAME, COURSE_ID, SHORT_DESCRIPTION, DESCRIPTION
  		 	<if test="fname != null">
  		 		, FNAME, FNAME_EN, FSIZE
  		 	</if>
  		 , POSITION_ID)
		 VALUES (seq_teacher_teacher_id.NEXTVAL, #{bootcamp_id}, #{teacher_name}, #{bootcamp_name}, #{course_id}, #{short_description}, #{description}
		 	<if test="fname != null">
		 	, #{fname}, #{fname_en}, #{fsize}
		 	</if>
		 , #{position_id})
  	</insert>
  	
  	<select id="getTeacherForUpdating" parameterType="teacher" resultType="teacher">
  		SELECT * 
  		  FROM teacher
  		 WHERE teacher_id = #{teacher_id}
  	</select>
  	
  	<update id="updateTeacher" parameterType="teacher">
		UPDATE teacher
		SET 
			BOOTCAMP_ID = #{bootcamp_id},
			TEACHER_NAME = #{teacher_name},
			BOOTCAMP_NAME = #{bootcamp_name},
			COURSE_NAME = #{course_name},
			SHORT_DESCRIPTION = #{short_description},
			DESCRIPTION = #{description}
		<if test="fname != null">
			, FNAME = #{fname},
			FNAME_EN = #{fname_en},
			FSIZE = #{fsize}
		</if>
			, POSITION_ID = #{position_id}
		WHERE TEACHER_ID = #{teacher_id}
  	</update>
  	
  	<delete id="deleteTeacher" parameterType="teacher">
  		DELETE FROM teacher 
  		 WHERE TEACHER_ID = #{teacher_id}
  	</delete>
  	
  	<select id="searchBootcampList" parameterType="teacher" resultType="teacher">
  		SELECT * 
  		  FROM teacher
         WHERE bootcamp_name = #{bootcamp_name}
  		 ORDER BY teacher_id ASC
  	</select>
  	
  	<select id="searchPositionList" parameterType="teacher" resultType="teacher">
  		SELECT t.teacher_id, t.bootcamp_id, t.teacher_name, t.bootcamp_name, c.course_id, c.course_name, t.short_description, t.fname, t.fname_en, t.fsize, t.position_id, p.position
 		  FROM teacher t, position p, course c
         WHERE t.position_id = p.position_id AND t.course_id = c.course_id AND p.position LIKE '%' || #{position} || '%'	
  		 ORDER BY teacher_id ASC
  	</select>
  	
  	<select id="chkCourse" parameterType="teacher" resultType="teacher">
		SELECT teacher_id, teacher_name, course_id
  		  FROM teacher 
  		 WHERE teacher_id = #{teacher_id}
	</select>
  	
  </mapper>
  


